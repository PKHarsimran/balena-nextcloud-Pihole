version: "2.1"

volumes:
  html:
  nextcloudv:
  mysql:
  pihole_config:
  dnsmasq_config:

services:
  # https://hub.docker.com/_/nextcloud/
  nextcloud:
    build: nextcloud
    privileged: true
    volumes:
      - nextcloudv:/var/www/html
    environment:
      MYSQL_HOST: mariadb
      MYSQL_DATABASE: nextcloud
      MYSQL_USER: nextcloud
      MYSQL_PASSWORD: nextcloud
      REDIS_HOST: redis
      REDIS_HOST_PASSWORD: nextcloud
      NEXTCLOUD_TRUSTED_DOMAINS: "192.168.4.96 nextcloud.local *.balena-devices.com"
    depends_on:
      - mariadb
      - redis

  # https://hub.docker.com/_/nginx/
  nginx:
    build: nginx
    ports:
      - 1741:1741/tcp
    volumes:
      - html:/var/www/html:ro
    depends_on:
      - nextcloud

  # https://hub.docker.com/r/yobasystems/alpine-mariadb
  mariadb:
    image: yobasystems/alpine-mariadb:10.6.7
    volumes:
      - mysql:/var/lib/mysql
    environment:
      MYSQL_DATABASE: nextcloud
      MYSQL_USER: nextcloud
      MYSQL_PASSWORD: nextcloud
      MYSQL_RANDOM_ROOT_PASSWORD: "yes"
    command:
      - --transaction-isolation=READ-COMMITTED
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --max-connections=512
      - --innodb-rollback-on-timeout=OFF
      - --innodb-lock-wait-timeout=50
      - --binlog-format=ROW
      # - --skip-innodb-read-only-compressed
    # Repurpose the healthcheck cmd by having it export our database on a schedule.
    # Run the backup every 1 hour to a file called $MYSQL_DATABASE-dump.sql.
    # How to restore: <https://mariadb.com/kb/en/mysqldump/#restoring>
    healthcheck:
      test: mysqldump $MYSQL_DATABASE -u$MYSQL_USER -p$MYSQL_PASSWORD --result-file=/var/lib/mysql/$MYSQL_DATABASE-dump.sql || exit 0
      interval: 1h
      timeout: 30s
      retries: 3

  # https://hub.docker.com/_/redis
  redis:
    image: redis:6.0.8-alpine
    command: redis-server --requirepass nextcloud

  pihole:
    build: pihole
    cap_add:
      - SYS_TTY_CONFIG
      - NET_ADMIN
    volumes:
      - "pihole_config:/etc/pihole"
      - "dnsmasq_config:/etc/dnsmasq.d"
    dns:
      - "127.0.0.1"
      - "1.1.1.1"
    network_mode: host
    labels:
      io.balena.features.dbus: "1"
    devices:
      - /dev/tty0
      - /dev/tty1

  unbound:
    build: unbound
    ports:
      - "5053:5053/tcp"
      - "5053:5053/udp"

  # https://github.com/balenablocks/fbcp
  fbcp:
    image: balenablocks/fbcp:1.0.0
    privileged: true

  # https://github.com/balenablocks/hostname
  hostname:
    build: hostname
    restart: no
    labels:
      io.balena.features.supervisor-api: 1
    environment:
      SET_HOSTNAME: piCloudhole
